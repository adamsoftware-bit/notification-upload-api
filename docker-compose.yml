services:
  notification-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"  # Exponemos directamente el puerto 3001
    expose:
      - "3001"
    environment:
      - PORT=3001
      - NODE_ENV=production
      - BASE_UPLOAD_DIR=/app/uploads
    volumes:
      # Montar la carpeta de uploads del host en el contenedor
      - ./uploads:/app/uploads
      # Montar .env para usar las variables de entorno
      - ./.env:/app/.env
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "443:443"  # Para HTTPS en el futuro
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./uploads:/uploads
    depends_on:
      notification-api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
